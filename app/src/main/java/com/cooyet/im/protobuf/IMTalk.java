// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Talk.proto

package com.cooyet.im.protobuf;

public final class IMTalk {
  private IMTalk() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface IMTalkCallReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkCallReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0901
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0901
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required uint32 create_time = 4;</code>
     */
    boolean hasCreateTime();
    /**
     * <code>required uint32 create_time = 4;</code>
     */
    int getCreateTime();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkCallReq}
   */
  public static final class IMTalkCallReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkCallReq)
      IMTalkCallReqOrBuilder {
    // Use IMTalkCallReq.newBuilder() to construct.
    private IMTalkCallReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkCallReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkCallReq defaultInstance;
    public static IMTalkCallReq getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkCallReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkCallReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              createTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkCallReq> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkCallReq>() {
      public IMTalkCallReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkCallReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkCallReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0901
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0901
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int CREATE_TIME_FIELD_NUMBER = 4;
    private int createTime_;
    /**
     * <code>required uint32 create_time = 4;</code>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 create_time = 4;</code>
     */
    public int getCreateTime() {
      return createTime_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      createTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, createTime_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, createTime_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkCallReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkCallReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkCallReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkCallReq)
        com.cooyet.im.protobuf.IMTalk.IMTalkCallReqOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkCallReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        createTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallReq getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkCallReq.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallReq build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallReq buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallReq result = new com.cooyet.im.protobuf.IMTalk.IMTalkCallReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.createTime_ = createTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkCallReq other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkCallReq.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasCreateTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkCallReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0901
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0901
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0901
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0901
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private int createTime_ ;
      /**
       * <code>required uint32 create_time = 4;</code>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 create_time = 4;</code>
       */
      public int getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required uint32 create_time = 4;</code>
       */
      public Builder setCreateTime(int value) {
        bitField0_ |= 0x00000008;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 create_time = 4;</code>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        createTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkCallReq)
    }

    static {
      defaultInstance = new IMTalkCallReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkCallReq)
  }

  public interface IMTalkCallResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkCallRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0902
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0902
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkCallRes}
   */
  public static final class IMTalkCallRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkCallRes)
      IMTalkCallResOrBuilder {
    // Use IMTalkCallRes.newBuilder() to construct.
    private IMTalkCallRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkCallRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkCallRes defaultInstance;
    public static IMTalkCallRes getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkCallRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkCallRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000008;
                resultCode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkCallRes> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkCallRes>() {
      public IMTalkCallRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkCallRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkCallRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0902
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0902
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 4;
    private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_;
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, resultCode_.getNumber());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, resultCode_.getNumber());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkCallRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkCallRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkCallRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkCallRes)
        com.cooyet.im.protobuf.IMTalk.IMTalkCallResOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkCallRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallRes getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkCallRes.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallRes build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkCallRes buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallRes result = new com.cooyet.im.protobuf.IMTalk.IMTalkCallRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkCallRes other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkCallRes.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkCallRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkCallRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0902
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0902
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0902
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0902
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
        return resultCode_;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder setResultCode(com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkCallRes)
    }

    static {
      defaultInstance = new IMTalkCallRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkCallRes)
  }

  public interface IMTalkHangUpReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkHangUpReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0903
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0903
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkHangUpReq}
   */
  public static final class IMTalkHangUpReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkHangUpReq)
      IMTalkHangUpReqOrBuilder {
    // Use IMTalkHangUpReq.newBuilder() to construct.
    private IMTalkHangUpReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkHangUpReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkHangUpReq defaultInstance;
    public static IMTalkHangUpReq getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkHangUpReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkHangUpReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkHangUpReq> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkHangUpReq>() {
      public IMTalkHangUpReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkHangUpReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkHangUpReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0903
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0903
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkHangUpReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkHangUpReq)
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReqOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq result = new com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkHangUpReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0903
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0903
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0903
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0903
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkHangUpReq)
    }

    static {
      defaultInstance = new IMTalkHangUpReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkHangUpReq)
  }

  public interface IMTalkHangUpResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkHangUpRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0904
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0904
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkHangUpRes}
   */
  public static final class IMTalkHangUpRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkHangUpRes)
      IMTalkHangUpResOrBuilder {
    // Use IMTalkHangUpRes.newBuilder() to construct.
    private IMTalkHangUpRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkHangUpRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkHangUpRes defaultInstance;
    public static IMTalkHangUpRes getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkHangUpRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkHangUpRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000008;
                resultCode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkHangUpRes> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkHangUpRes>() {
      public IMTalkHangUpRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkHangUpRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkHangUpRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0904
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0904
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 4;
    private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_;
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, resultCode_.getNumber());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, resultCode_.getNumber());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkHangUpRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkHangUpRes)
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpResOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes result = new com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkHangUpRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0904
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0904
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0904
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0904
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
        return resultCode_;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder setResultCode(com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkHangUpRes)
    }

    static {
      defaultInstance = new IMTalkHangUpRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkHangUpRes)
  }

  public interface IMTalkAllocReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkAllocReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0905
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0905
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkAllocReq}
   */
  public static final class IMTalkAllocReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkAllocReq)
      IMTalkAllocReqOrBuilder {
    // Use IMTalkAllocReq.newBuilder() to construct.
    private IMTalkAllocReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkAllocReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkAllocReq defaultInstance;
    public static IMTalkAllocReq getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkAllocReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkAllocReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkAllocReq> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkAllocReq>() {
      public IMTalkAllocReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkAllocReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkAllocReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0905
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0905
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkAllocReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkAllocReq)
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocReqOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq result = new com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkAllocReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0905
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0905
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0905
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0905
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkAllocReq)
    }

    static {
      defaultInstance = new IMTalkAllocReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkAllocReq)
  }

  public interface IMTalkAllocResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkAllocRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0906
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0906
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkAllocRes}
   */
  public static final class IMTalkAllocRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkAllocRes)
      IMTalkAllocResOrBuilder {
    // Use IMTalkAllocRes.newBuilder() to construct.
    private IMTalkAllocRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkAllocRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkAllocRes defaultInstance;
    public static IMTalkAllocRes getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkAllocRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkAllocRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000008;
                resultCode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkAllocRes> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkAllocRes>() {
      public IMTalkAllocRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkAllocRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkAllocRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0906
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0906
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 4;
    private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_;
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, resultCode_.getNumber());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, resultCode_.getNumber());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkAllocRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkAllocRes)
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocResOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes result = new com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkAllocRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0906
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0906
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0906
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0906
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
        return resultCode_;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder setResultCode(com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkAllocRes)
    }

    static {
      defaultInstance = new IMTalkAllocRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkAllocRes)
  }

  public interface IMTalkReleaseReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkReleaseReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0907
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0907
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkReleaseReq}
   */
  public static final class IMTalkReleaseReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkReleaseReq)
      IMTalkReleaseReqOrBuilder {
    // Use IMTalkReleaseReq.newBuilder() to construct.
    private IMTalkReleaseReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkReleaseReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkReleaseReq defaultInstance;
    public static IMTalkReleaseReq getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkReleaseReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkReleaseReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkReleaseReq> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkReleaseReq>() {
      public IMTalkReleaseReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkReleaseReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkReleaseReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0907
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0907
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkReleaseReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkReleaseReq)
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReqOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq result = new com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkReleaseReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0907
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0907
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0907
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0907
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkReleaseReq)
    }

    static {
      defaultInstance = new IMTalkReleaseReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkReleaseReq)
  }

  public interface IMTalkReleaseResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkReleaseRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0908
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0908
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkReleaseRes}
   */
  public static final class IMTalkReleaseRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkReleaseRes)
      IMTalkReleaseResOrBuilder {
    // Use IMTalkReleaseRes.newBuilder() to construct.
    private IMTalkReleaseRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkReleaseRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkReleaseRes defaultInstance;
    public static IMTalkReleaseRes getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkReleaseRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkReleaseRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000008;
                resultCode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkReleaseRes> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkReleaseRes>() {
      public IMTalkReleaseRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkReleaseRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkReleaseRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0908
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0908
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 4;
    private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_;
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, resultCode_.getNumber());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, resultCode_.getNumber());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkReleaseRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkReleaseRes)
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseResOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes result = new com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkReleaseRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0908
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0908
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0908
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0908
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
        return resultCode_;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder setResultCode(com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkReleaseRes)
    }

    static {
      defaultInstance = new IMTalkReleaseRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkReleaseRes)
  }

  public interface IMTalkVoiceReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkVoiceReq)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0909
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0909
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required uint32 sequence = 4;</code>
     */
    boolean hasSequence();
    /**
     * <code>required uint32 sequence = 4;</code>
     */
    int getSequence();

    /**
     * <code>required bytes voice_data = 5;</code>
     */
    boolean hasVoiceData();
    /**
     * <code>required bytes voice_data = 5;</code>
     */
    com.google.protobuf.ByteString getVoiceData();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkVoiceReq}
   */
  public static final class IMTalkVoiceReq extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkVoiceReq)
      IMTalkVoiceReqOrBuilder {
    // Use IMTalkVoiceReq.newBuilder() to construct.
    private IMTalkVoiceReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkVoiceReq(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkVoiceReq defaultInstance;
    public static IMTalkVoiceReq getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkVoiceReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkVoiceReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sequence_ = input.readUInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              voiceData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkVoiceReq> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkVoiceReq>() {
      public IMTalkVoiceReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkVoiceReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkVoiceReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0909
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x0909
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 4;
    private int sequence_;
    /**
     * <code>required uint32 sequence = 4;</code>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 sequence = 4;</code>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int VOICE_DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString voiceData_;
    /**
     * <code>required bytes voice_data = 5;</code>
     */
    public boolean hasVoiceData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes voice_data = 5;</code>
     */
    public com.google.protobuf.ByteString getVoiceData() {
      return voiceData_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      sequence_ = 0;
      voiceData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVoiceData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, sequence_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, voiceData_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, sequence_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, voiceData_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkVoiceReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkVoiceReq)
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReqOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        voiceData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq result = new com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.voiceData_ = voiceData_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasVoiceData()) {
          setVoiceData(other.getVoiceData());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasSequence()) {
          
          return false;
        }
        if (!hasVoiceData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkVoiceReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0909
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0909
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0909
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x0909
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private int sequence_ ;
      /**
       * <code>required uint32 sequence = 4;</code>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 sequence = 4;</code>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <code>required uint32 sequence = 4;</code>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000008;
        sequence_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 sequence = 4;</code>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sequence_ = 0;
        
        return this;
      }

      private com.google.protobuf.ByteString voiceData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes voice_data = 5;</code>
       */
      public boolean hasVoiceData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes voice_data = 5;</code>
       */
      public com.google.protobuf.ByteString getVoiceData() {
        return voiceData_;
      }
      /**
       * <code>required bytes voice_data = 5;</code>
       */
      public Builder setVoiceData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        voiceData_ = value;
        
        return this;
      }
      /**
       * <code>required bytes voice_data = 5;</code>
       */
      public Builder clearVoiceData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        voiceData_ = getDefaultInstance().getVoiceData();
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkVoiceReq)
    }

    static {
      defaultInstance = new IMTalkVoiceReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkVoiceReq)
  }

  public interface IMTalkVoiceResOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IM.Talk.IMTalkVoiceRes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x090a
     * </pre>
     */
    boolean hasFromUserId();
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x090a
     * </pre>
     */
    int getFromUserId();

    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    boolean hasToSessionId();
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    int getToSessionId();

    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    boolean hasMsgId();
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    int getMsgId();

    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    boolean hasResultCode();
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode();
  }
  /**
   * Protobuf type {@code IM.Talk.IMTalkVoiceRes}
   */
  public static final class IMTalkVoiceRes extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:IM.Talk.IMTalkVoiceRes)
      IMTalkVoiceResOrBuilder {
    // Use IMTalkVoiceRes.newBuilder() to construct.
    private IMTalkVoiceRes(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IMTalkVoiceRes(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final IMTalkVoiceRes defaultInstance;
    public static IMTalkVoiceRes getDefaultInstance() {
      return defaultInstance;
    }

    public IMTalkVoiceRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private IMTalkVoiceRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromUserId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toSessionId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              msgId_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000008;
                resultCode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IMTalkVoiceRes> PARSER =
        new com.google.protobuf.AbstractParser<IMTalkVoiceRes>() {
      public IMTalkVoiceRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IMTalkVoiceRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IMTalkVoiceRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROM_USER_ID_FIELD_NUMBER = 1;
    private int fromUserId_;
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x090a
     * </pre>
     */
    public boolean hasFromUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 from_user_id = 1;</code>
     *
     * <pre>
     *cmd id:		0x090a
     * </pre>
     */
    public int getFromUserId() {
      return fromUserId_;
    }

    public static final int TO_SESSION_ID_FIELD_NUMBER = 2;
    private int toSessionId_;
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public boolean hasToSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 to_session_id = 2;</code>
     *
     * <pre>
     *消息接受方
     * </pre>
     */
    public int getToSessionId() {
      return toSessionId_;
    }

    public static final int MSG_ID_FIELD_NUMBER = 3;
    private int msgId_;
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 msg_id = 3;</code>
     */
    public int getMsgId() {
      return msgId_;
    }

    public static final int RESULT_CODE_FIELD_NUMBER = 4;
    private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_;
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
     */
    public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
      return resultCode_;
    }

    private void initFields() {
      fromUserId_ = 0;
      toSessionId_ = 0;
      msgId_ = 0;
      resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, resultCode_.getNumber());
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fromUserId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, toSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, resultCode_.getNumber());
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IM.Talk.IMTalkVoiceRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:IM.Talk.IMTalkVoiceRes)
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceResOrBuilder {
      // Construct using com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toSessionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes getDefaultInstanceForType() {
        return com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes.getDefaultInstance();
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes build() {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes buildPartial() {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes result = new com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromUserId_ = fromUserId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toSessionId_ = toSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resultCode_ = resultCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes other) {
        if (other == com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes.getDefaultInstance()) return this;
        if (other.hasFromUserId()) {
          setFromUserId(other.getFromUserId());
        }
        if (other.hasToSessionId()) {
          setToSessionId(other.getToSessionId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromUserId()) {
          
          return false;
        }
        if (!hasToSessionId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cooyet.im.protobuf.IMTalk.IMTalkVoiceRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromUserId_ ;
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x090a
       * </pre>
       */
      public boolean hasFromUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x090a
       * </pre>
       */
      public int getFromUserId() {
        return fromUserId_;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x090a
       * </pre>
       */
      public Builder setFromUserId(int value) {
        bitField0_ |= 0x00000001;
        fromUserId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 from_user_id = 1;</code>
       *
       * <pre>
       *cmd id:		0x090a
       * </pre>
       */
      public Builder clearFromUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromUserId_ = 0;
        
        return this;
      }

      private int toSessionId_ ;
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public boolean hasToSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public int getToSessionId() {
        return toSessionId_;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder setToSessionId(int value) {
        bitField0_ |= 0x00000002;
        toSessionId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 to_session_id = 2;</code>
       *
       * <pre>
       *消息接受方
       * </pre>
       */
      public Builder clearToSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toSessionId_ = 0;
        
        return this;
      }

      private int msgId_ ;
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public int getMsgId() {
        return msgId_;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000004;
        msgId_ = value;
        
        return this;
      }
      /**
       * <code>required uint32 msg_id = 3;</code>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        msgId_ = 0;
        
        return this;
      }

      private com.cooyet.im.protobuf.IMBaseDefine.TalkResultType resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public com.cooyet.im.protobuf.IMBaseDefine.TalkResultType getResultCode() {
        return resultCode_;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder setResultCode(com.cooyet.im.protobuf.IMBaseDefine.TalkResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        resultCode_ = value;
        
        return this;
      }
      /**
       * <code>required .IM.BaseDefine.TalkResultType result_code = 4;</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resultCode_ = com.cooyet.im.protobuf.IMBaseDefine.TalkResultType.SUCCESS;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IM.Talk.IMTalkVoiceRes)
    }

    static {
      defaultInstance = new IMTalkVoiceRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IM.Talk.IMTalkVoiceRes)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
